<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.skhu.mapper.read.SugangReadMapper">

<select id= "sugangList" resultMap = "sugangView">
	SELECT  l.id , l.title , p.name as professorName, l.room ,l.credit , p.id as professorId,
			concat((select count(*) from sugang sg where sg.lectureId = l.id ), '/', l.entry) as seatCnt
	  FROM  lecture l LEFT OUTER JOIN professor p on l.professorId = p.id 
</select>

<resultMap id="sugangView" type="net.skhu.dto.res.ResLecture">
	<id column="id" jdbcType="INTEGER" property="id"/>
	<result column="title" jdbcType="VARCHAR" property="title"/>
	<result column="room" jdbcType="VARCHAR" property="room"/>
	<result column="credit" jdbcType="INTEGER" property="credit"/>
	<result column="seatCnt" jdbcType="VARCHAR" property="seatCnt"/>
	<collection property="professor" ofType="net.skhu.dto.res.ResProfessor">
		<id property="id" column="professorId"/>
		<result property="name" column="professorName"/>
	</collection>
</resultMap>
	
<select id= "studentSugangList" resultType="net.skhu.dto.res.ResStudent">
	SELECT l.title , p.name , l.credit,  l.room, concat((select count(*) from sugang s2 where sg.lectureId = s2.lectureId ), '/', l.entry) as seatCnt
			,s.id , l.id as lectureId
	  FROM student s LEFT OUTER JOIN department d on s.departmentId = d.id  
					LEFT OUTER JOIN sugang sg on s.id = sg.studentId  
			 		LEFT OUTER JOIN lecture l on sg.lectureId = l.id 
			 		LEFT OUTER JOIN professor p on l.professorId = p.id
	WHERE s.id = ${id} 
</select>


<!-- <select id= "studentSugangList" resultMap = "studentSugangView">
	SELECT s.id , s.studentNo , s.name , s.phone , s.sex , s.email ,
			d.id as departmentId, d.name as departmentName, 
			sg.id as sugangId, sg.studentId, sg.credit , sg.cancel , sg.grade , 
			l.title , l.year, l.semester , l.room, l.credit, l.id as lectureId,
			concat((select count(*) from sugang s2 where sg.lectureId = s2.lectureId ), '/', l.entry) as seatCnt,
			p.id as professorId,  p.name as professorName
	  FROM student s LEFT OUTER JOIN department d on s.departmentId = d.id  
					LEFT OUTER JOIN sugang sg on s.id = sg.studentId  
			 		LEFT OUTER JOIN lecture l on sg.lectureId = l.id 
			 		LEFT OUTER JOIN professor p on l.professorId = p.id
	WHERE s.id = ${id} 
</select>

<resultMap id="studentSugangView" type="net.skhu.dto.res.ResStudent">
	<id column="id" jdbcType="INTEGER" property="id"/>
		<result column="studentNo" jdbcType="VARCHAR" property="studentNo"/>
		<result column="name" jdbcType="VARCHAR" property="name"/>
		<result column="phone" jdbcType="VARCHAR" property="phone"/>
		<result column="sex" jdbcType="VARCHAR" property="sex"/>
		<result column="email" jdbcType="VARCHAR" property="email"/>
	<collection property="department" ofType="net.skhu.dto.res.ResDepartment">
		<id property="id" column="departmentId"/>
		<result property="name" column="departmentName"/>
	</collection>
	<collection property="sugang" ofType="net.skhu.dto.res.ResSugang">
		<id property="id" column="sugangId"/>
		<result property="studentId" column="studentId"/>
		<result property="credit" column="credit"/>
		<result property="cancel" column="cancel"/>
		<result property="grade" column="grade"/>
	</collection>
	<collection property="lecture" ofType="net.skhu.dto.res.ResLecture">
		<id property="id" column="lectureId"/>
		<result property="title" column="title"/>
		<result property="year" column="year"/>
		<result property="semester" column="semester"/>
		<result property="room" column="room"/>
		<result property="credit" column="credit"/>
		<result column="seatCnt" jdbcType="VARCHAR" property="seatCnt"/>
	</collection>
	<collection property="professor" ofType="net.skhu.dto.res.ResProfessor">
		<id property="id" column="professorId"/>
		<result property="name" column="professorName"/>
	</collection>
</resultMap> -->

<select id= "countSugang" parameterType = "int" resultType = "String">
	SELECT  case when l.entry > count(*) then "OK"
  			else "NO" end
	  FROM  sugang s join lecture l on s.lectureId = l.id 
	 WHERE  s.year = ${year}
	   AND s.semester = ${semester}
	   AND s.lectureId = ${lectureId}
</select>

<select id= "countSugangInt" parameterType = "int" resultType = "int">
	SELECT  count(*)
	  FROM  sugang s join lecture l on s.lectureId = l.id 
	 WHERE  s.year = ${year}
	   AND s.semester = ${semester}
	   AND l.id = ${lectureId}
</select>

<select id= "studentCredit" parameterType = "int" resultType = "int">
	SELECT   ifnull(sum(credit), 0)
	  FROM  sugang s  
	 WHERE  s.studentId = ${studentId}
	   AND year = ${year}
	   AND semester =${semester}
</select>

<select id= "duplicateCheck" parameterType = "int" resultType = "int">
	SELECT   count(*)
	  FROM  sugang s  
	 WHERE  s.studentId = ${studentId}
	   AND s.year = ${year}
	   AND s.semester =${semester}
	   AND s.lectureId = ${lectureId}
</select>

</mapper>

